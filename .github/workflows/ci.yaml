---
name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:
  schedule:
    - cron: '33 7 * * 0' # run weekly on sundays
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-root-v2
      - name: Install poetry
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry"
          python -m poetry self add poetry-version-plugin
      - name: Configure poetry
        run: python -m poetry config virtualenvs.create false
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m poetry install
      - name: Lint
        run: make lint-check
      - name: Test
        run: make test
        env:
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}
